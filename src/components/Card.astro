---
import { Countdown } from './CountDown';
import { calculateCountdown } from '@lib/countDown.ts';
interface Props {
    song: string;
    poem: string;
    date: string;
    imagen: string;
    backImage: string;
    indexControl?: number;
}
const { song, poem, date, imagen, backImage } = Astro.props;
const weekday = [
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
];
const month = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December',
];
const monthName = month[new Date(date).getMonth()];
const fecha = new Date(date).getDate();
const day = weekday[new Date(date).getDay()];
const dayName = day;

const countDownFinish = calculateCountdown(date) === null ? false : true;
---

<div class='card' id={fecha.toString()}>
    <article
        class='card-front bg-cover bg-center rounded-md flex flex-col justify-between'
        style=`background-image: url(${imagen}); `
    >
        <div
            class='flex flex-col items-center bg-black/70 rounded-md p-1 h-[500px] justify-evenly'
        >
            <h1 class='text-xl w-10/12'>
                Poema disponible el dia: {dayName}
                {fecha}
                {monthName}
            </h1>
            <Countdown date={date} client:only='react' />
            {
                !countDownFinish && (
                    <button disabled={countDownFinish}>Abrir </button>
                )
            }
        </div>
    </article>

    <article
        class='card-back bg-cover bg-center rounded-md h-full p-2 flex flex-col justify-between'
        style=`background-image: url(${backImage}); `
    >
        <div
            class='flex flex-col items-center bg-black/80 rounded-md p-1 h-[500px] justify-evenly'
        >
            <h2>La cancion de hoy es:{song}</h2>
            <a
                class='flex flex-row justify-center items-center gap-2'
                rel='noopener'
                href='https://open.spotify.com/track/22ewStXOLuH7DpSuNyo0qs?si=d998204d882d49f5'
                target='_blank'
            >
                <img src='/Spotify_icon.svg' alt='spotify' />
                Reproducir cancion
            </a>
            <p class='text-pink-500 italic truncate text-lg'>
                {poem}sf'pksajgo['asidfjsado;
            </p>

            <a href={`/dia/regalo-del-${fecha}`}> poema completo </a>
            <button class='rounded-md bg-green-600 p-1'>Cerrar</button>
        </div>
    </article>
</div>

<style>
    /* CSS */
    .card {
        width: 450px;
        height: 550px;
        position: relative;
        perspective: 1000px;
        transform-style: preserve-3d;
        transition: rotate 300ms linear;
    }

    .card.show {
        rotate: y 180deg;
    }

    .card-front,
    .card-back {
        padding: 0.5em;
        position: absolute;
        inset: 0;
        display: grid;
        place-content: center;
        backface-visibility: hidden;
    }

    .card-back {
        rotate: y 180deg;
    }
    img {
        width: 1.5rem;
        height: 1.5rem;
    }

    p {
        margin: 0 0.5rem;
        max-width: 15.45em;

        text-align: center;
    }
</style>

<script>
    document.addEventListener('astro:page-load', () => {
        const cards = document.querySelectorAll('.card');
        cards.forEach((card) => {
            const buttons = card.querySelectorAll('button');

            buttons.forEach((button) => {
                button.addEventListener('click', () => {
                    card.classList.toggle('show');
                });
            });
        });
    });
</script>
