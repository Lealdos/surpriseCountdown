---
import { Countdown } from './CountDown';
interface Props {
    song?: string;
    poem?: string;
    date?: string;
    imagen: string;
}

const { song, poem, date, imagen } = Astro.props;
const day = date && new Date(date).toLocaleDateString();
---

<article
    class={`bg-[url('${imagen}')] bg-cover bg-center rounded-md h-full p-2 flex flex-col items-center justify-around `}
>
    {
        date && (
            <div class='flex flex-col items-center '>
                <h1 class='text-xl  w-10/12'>Poema disponible el dia: {day}</h1>
                <Countdown date={date} client:only='react' />
            </div>
        )
    }
    <h2>{song}</h2>
    <p class='text-red-500'>
        {poem}
    </p>
</article>

<style>
    .link-card {
        list-style: none;
        display: flex;
        flex-direction: column;
        padding: 2px;
        background-image: none;
        background-size: 400%;
        border-radius: 7px;
        background-position: 100%;
        transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
        box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
    }
    .link-card > a {
        width: 100%;
        text-decoration: none;
        line-height: 1.4;
        padding: calc(1.5rem - 1px);
        border-radius: 8px;
        color: white;
        background-color: #23262d;
        opacity: 0.8;
    }
    h2 {
        margin: 0;
        font-size: 1.25rem;
        transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    }
    p {
        margin-top: 0.5rem;
        margin-bottom: 0;
    }
    .link-card:is(:hover, :focus-within) {
        background-position: 0;
        background-image: var(--accent-gradient);
    }
    .link-card:is(:hover, :focus-within) h2 {
        color: rgb(var(--accent-light));
    }
</style>
